# This is a minimal example config
# See /usr/share/doc/lighttpd
# and http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions

# {{{ Variables
server.tag              = ""
server.port		        = 7443
server.username		    = "http"
server.groupname	    = "http"
server.document-root	= "/srv/http"
server.pid-file		    = "/var/run/lighttpd/lighttpd.pid"
server.errorlog		    = "/var/log/lighttpd/error.log"
dir-listing.activate	= "disable"
index-file.names	    = ( "index.html", "index.php", "displatch.fcgi" )
# }}}

# {{{ Mimetypes
mimetype.assign		= (
    ".pdf"          =>  "application/pdf",
    ".sig"          =>      "application/pgp-signature",
    ".spl"          =>      "application/futuresplash",
    ".class"        =>      "application/octet-stream",
    ".ps"           =>      "application/postscript",
    ".torrent"      =>      "application/x-bittorrent",
    ".dvi"          =>      "application/x-dvi",
    ".gz"           =>      "application/x-gzip",
    ".pac"          =>      "application/x-ns-proxy-autoconfig",
    ".swf"          =>      "application/x-shockwave-flash",
    ".tar.gz"       =>      "application/x-tgz",
    ".tgz"          =>      "application/x-tgz",
    ".tar"          =>      "application/x-tar",
    ".zip"          =>      "application/zip",
    ".mp3"          =>      "audio/mpeg",
    ".m3u"          =>      "audio/x-mpegurl",
    ".wma"          =>      "audio/x-ms-wma",
    ".wax"          =>      "audio/x-ms-wax",
    ".ogg"          =>      "application/ogg",
    ".wav"          =>      "audio/x-wav",
    ".gif"          =>      "image/gif",
    ".jpg"          =>      "image/jpeg",
    ".jpeg"         =>      "image/jpeg",
    ".png"          =>      "image/png",
    ".xbm"          =>      "image/x-xbitmap",
    ".xpm"          =>      "image/x-xpixmap",
    ".xwd"          =>      "image/x-xwindowdump",
    ".css"          =>      "text/css",
    ".html"         =>      "text/html",
    ".htm"          =>      "text/html",
    ".js"           =>      "text/javascript",
    ".asc"          =>      "text/plain",
    ".c"            =>      "text/plain",
    ".cpp"          =>      "text/plain",
    ".log"          =>      "text/plain",
    ".conf"         =>      "text/plain",
    ".text"         =>      "text/plain",
    ".txt"          =>      "text/plain",
    ".dtd"          =>      "text/xml",
    ".xml"          =>      "text/xml",
    ".mpeg"         =>      "video/mpeg",
    ".mpg"          =>      "video/mpeg",
    ".mov"          =>      "video/quicktime",
    ".qt"           =>      "video/quicktime",
    ".avi"          =>      "video/x-msvideo",
    ".asf"          =>      "video/x-ms-asf",
    ".asx"          =>      "video/x-ms-asf",
    ".wmv"          =>      "video/x-ms-wmv",
    ".bz2"          =>      "application/x-bzip",
    ".tbz"          =>      "application/x-bzip-compressed-tar",
    ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
)
# }}}

# {{{ Modules
server.modules = (
    "mod_access",
    "mod_alias",
    "mod_cgi",
    "mod_fastcgi",
    "mod_accesslog",
    "mod_evasive",
    "mod_setenv",
    "mod_redirect",
    "mod_rewrite",
    "mod_proxy",
#                               "mod_cml",
#                               "mod_trigger_b4_dl",
#                               "mod_auth",
#                               "mod_status",
#                               "mod_simple_vhost",
#                               "mod_evhost",
#                               "mod_userdir",
#                               "mod_compress",
#                               "mod_ssi",
#                               "mod_usertrack",
#                               "mod_expire",
#                               "mod_secdownload",
#                               "mod_rrdtool",
)
# }}}

# {{{ Mod Evasive
evasive.max-conns-per-ip = 20
# }}}

# {{{ FastCGI and PHP
server.error-handler-404   = "/dispatch.fcgi" #too
fastcgi.server = (
".php" =>
  ( "localhost" =>
    (
      "socket" => "/tmp/php-fastcgi.socket",
      "bin-path" => "/usr/bin/php-cgi"
    )
  )
)
# }}}

# {{{ SSL
ssl.engine = "enable" 
ssl.pemfile = "/etc/lighttpd/server.pem"

$SERVER["socket"] == ":80" {
   ssl.engine = "disable"
}
# }}}

# {{{ PHPMyAdmin
$HTTP["host"] =~ "sql\.twyk\.tk" {
    server.document-root    = "/usr/share/webapps/phpMyAdmin/"
    accesslog.filename      = "/var/log/lighttpd/sql.twyk.tk.log"
}
# }}}

# {{{ Tiny Tiny RSS
$HTTP["host"] =~ "news\.twyk\.tk" {
    server.document-root    = "/home/http/ttrss/"
    accesslog.filename      = "/var/log/lighttpd/news.twyk.tk.log"
}
# }}}

# {{{ Streeme
# $SERVER["socket"] == ":443" {
#     #ssl.engine           = "disable"
#     server.document-root = "/srv/http/streeme/web"
#     alias.url           += (
#         "/sf" => "/lib/vendor/symfony/data/web/sf"
#     )
#     url.rewrite-once = ( 
#             "^/(.*\..+(?!html))$" => "$0",
#             "^/(.*)\.(.*)"        => "$0",
#             "^/([^.]+)$"          => "/index.php/$1",
#             "^/$"                 => "/index.php"
#     )
# }

# $SERVER["socket"] == ":80" {
#     ssl.engine           = "disable"
#     server.document-root = "/srv/http/streeme/web"
#     alias.url           += (
#         "/sf" => "/lib/vendor/symfony/data/web/sf"
#     )
#     url.rewrite-once = ( 
#         "^/(.*\..+(?!html))$" => "$0",
#         "^/(.*)\.(.*)"        => "$0",
#         "^/([^.]+)$"          => "/index.php/$1",
#         "^/$"                 => "/index.php"
#     )
# }
# }}}

# {{{ Gitweb
$HTTP["host"] =~ "git\.twyk\.tk" {
    server.document-root    = "/usr/share/gitweb/"
    accesslog.filename      = "/var/log/lighttpd/git.twyk.tk.log"
    cgi.assign              = (".cgi" => "")
    server.indexfiles       = ("gitweb.cgi")
    setenv.add-environment  = ( "GITWEB_CONFIG" => "/etc/conf.d/gitweb.conf" )
}
# }}}

# {{{ OpenID
$HTTP["host"] =~ "id\.twyk\.tk" {
    server.document-root    = "/home/http/openid/www/"
    accesslog.filename      = "/var/log/lighttpd/id.twyk.tk.log"
}
# }}}

# {{{ Subsonic
# $HTTP["host"] =~ "music\.twyk\.tk" {
#     proxy.server = ("" => (("port" => 8080)))    
#     accesslog.filename      = "/var/log/lighttpd/music.twyk.tk.log"
# }
