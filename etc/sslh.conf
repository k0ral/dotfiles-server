verbose: false;
foreground: true;
inetd: false;
numeric: false;
timeout: 2;
user: "nobody";
pidfile: "/run/sslh.pid";


# List of interfaces on which we should listen
listen:
(
    { host: "twyk.org"; port: "443"; }
#    , { host: "thelonious"; port: "8080"; }
);

# List of protocols
#
# Each protocol entry consists of:
#   name: name of the protocol
#   service: (optional) libwrap service name (see hosts_access(5))
#   host: host name to connect that protocol
#   port: port number to connect that protocol
#   probe: "builtin" or a list of regular expressions
#   
# In case of timeout sslh will connect to the first
# protocol: this should be SSH.
# SSL should have a "always true" probe, and come last.
# sslh will try each probe in order they are declared, and
# connect to the first that matches.

protocols:
(
     { name: "ssh"; service: "ssh"; host: "localhost"; port: "22"; probe: "builtin"; },
     { name: "openvpn"; host: "localhost"; port: "1194"; probe: [ "^\x00[\x0D-\xFF]$", "^\x00[\x0D-\xFF]\x38" ]; },
     { name: "xmpp"; host: "localhost"; port: "5222"; probe: [ "jabber" ]; },
     { name: "http"; host: "localhost"; port: "80"; probe: "builtin"; },
     { name: "ssl"; host: "localhost"; port: "7443"; probe: [ "" ]; }
);

